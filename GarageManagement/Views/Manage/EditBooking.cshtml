@model GarageManagement.Models.BookingView
@{

}
<p class="text-success">@ViewBag.StatusMessage</p>
@using (Html.BeginForm("Booking", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.Hidden("Id", Model.Id)




    @Html.AntiForgeryToken()

    <hr />
    <div class="col-md-6 form-horizontal">
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group" style="margin-bottom:0px">
            @Html.LabelFor(m => m.DueDate, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                <div class="container">
                    <div class="row">
                        <div class='col-sm-6'>
                            <div class="form-group">
                                <div class='input-group date' id='datetimepicker5' style="display:block">
                                    <input type='text' class="form-control" name="DueDate" id="DueDate" />
                                    <span class="input-group-addon" style="    display: inline-table;padding: 7px 12px;font-size: 17px;">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.VehicleType, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.VehicleType, new SelectList(ViewBag.VehicleTypeList, "Value", "Text", Model.VehicleType), new { @class = "col-md-2 form-control", @id = "VehicleType" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EngineType, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.EngineType, new SelectList(ViewBag.EngineTypes, "Value", "Text", Model != null ? Model.EngineType : 1), new { @class = "col-md-2 form-control", @id = "EngineType" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Make, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.Make, new SelectList(new List<SelectListItem>(), "Value", "Text"), new { @class = "col-md-2 form-control", @id = "make", @placeHolder = "Please select a vehicle type" })
            </div>

        </div>
        <div class="form-group hidden" id="duedateView">
            @Html.LabelFor(m => m.Other, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Other, new { @class = "form-control", @id = "Other", @placeHolder = "Please type the vehicle's make" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(m => m.VRC, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.VRC, new { @class = "form-control", @placeHolder = "Please type the VRC" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(m => m.Licence, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Licence, new { @class = "form-control", @placeHolder = "Please type the VRC" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(m => m.VLC, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.VLC, new { @class = "form-control", @placeHolder = "Please type the VLC" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.BookingTypeId, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.BookingTypeId, new SelectList(ViewBag.BookingTypes, "Value", "Text"), new { @class = "col-md-2 form-control" })
            </div>
        </div>




    </div>
    <div class="col-md-6 form-horizontal">
        <div class="form-group">
            @Html.LabelFor(m => m.StatusId, "Current status:", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.StatusId, new SelectList(ViewBag.Status, "Value", "Text", Model != null ? Model.StatusId : 1), new { @class = "col-md-2 form-control", @id = "StatusId" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.StaffId, "Current Staff:", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.StaffId, new SelectList(ViewBag.Staffs, "Value", "Text", Model.StaffId), new { @class = "col-md-2 form-control", @id = "StaffId" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.BasicCost, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.BasicCost, new { @class = "form-control", @placeHolder = "10.00" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Observation, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Observation, new { @class = "form-control", @placeHolder = "Please tell us a bit about the problem" })

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-1 col-md-3">
                <input type="button" class="btn btn-success" data-toggle="modal" data-target="#myModal" value="Add Services/Parts" />
            </div>
            <div class="col-md-offset-1 col-md-3">
                <a href="/manage/print/@Model.Id" target="_blank"><input type="button" class="btn btn-primary" data-toggle="modal" value="Invoice" /></a>
            </div>
            <div class="col-md-offset-1 col-md-3">
                <input type="submit" class="btn btn-default" value="Save" />
            </div>
        </div>
        <div class="form-group">
            Services/Parts
            <div class="col-md-12" id="produtos">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Qtde</th>
                            <th>Price</th>
                            <th>Remove</th>
                        </tr>
                    </thead>
                    <tbody id="tbodyProd"></tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>

}


@{Html.RenderAction("ModalConfirmServicesAndParts", "Manage");}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var make = @Html.Raw(Model != null ? Json.Encode(Model.Make): "undefined");

        var prods = [];

        function addProducts() {
            
            $.ajax({
                type: "POST",
                url: "/Manage/addProducts",
                data: { "bookingId": $("#Id").val(), "prods": prods },
                dataType: 'json',
                success: function (Data) {
                   
                    var row = "";
                    $.each(Data.data, function (index, value) {
                        row = row + "<tr id='prod" + value.Id + "'>";
                        row = row + "<td>" + value.Name + "</td>";
                        row = row + "<td>" + value.Qtd + "</td>";
                        row = row + "<td>" + value.Price + "</td>";
                        row = row + "<td style='text-align:center'><span class='glyphicon glyphicon-remove removeProd' style='cursor:pointer' data-id='" + value.Id + "'/></td>";
                        row = row + "</tr>";
                    });
                    $("#tbodyProd").html(row);

                    $(".removeProd").click(function () {
                        var id = $(this).data("id");                        
                        $.ajax({
                            type: "POST",
                            url: "/Manage/RemoveProd",
                            data: { "id": id },
                            dataType: 'json',
                            success: function (Data) {                           
                                
                            },

                        });
                        $("#prod" + id).remove();
                       
                    });
                },
               
            });
        }
        $(document).ready(function () {


            $("#VehicleType").on("change", function () {
                    $.ajax({
                        url: '/Manage/GetMakes',
                        type: 'POST',
                        data: { "type": $(this).val() },
                        dataType: 'json',
                        success: function (data) {
                            $('#make').html('');
                            $.each(data.list, function (key, value) {
                                $('#make')
                                    .append($('<option>', { value: key })
                                        .text(key));
                            });
                            if (make != "" && make != null && make != undefined && make != "undefined") {
                                $('#make').val(make);
                                $("#make").change();
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert(xhr.responseText);
                        }
                    });

            });

            $("#make").on("change", function () {
                if ($(this).val() == "Other") {
                    $("#duedateView").removeClass("hidden");
                } else {
                    $("#duedateView").addClass("hidden");
                }
            });

            $("#VehicleType").change();

            $.ajax({
                url: '/Manage/GetDisabledDates',
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    $(function () {
                        $('#datetimepicker5').datetimepicker({
                            format: 'DD/MM/yyyy',
                            defaultDate: new Date(),
                            disabledDates: data.list,
                            daysOfWeekDisabled: [0]
                        });
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(xhr.responseText);
                }
            });

            $('#tblServicesAndParts').DataTable({
                "pageLength": 5,
                "drawCallback": function (settings) {
                    $(".add-bookingPrice").click(function () {
                        var that = this;
                        var id = $(that).data("id");
                        if ($(this).hasClass("glyphicon-plus")) {
                            prods.push({ "qtd": $("#qtde" + id).val(), "id": $(that).data("id") });
                            $(that).removeClass("glyphicon-plus");
                            $(that).addClass("glyphicon-remove");
                        } else {
                            prods = jQuery.grep(prods, function (value) {
                                return value.id != id;
                            });

                            $(that).removeClass("glyphicon-remove");
                            $(that).addClass("glyphicon-plus");
                        }
                    });
                }
            });

           

            $(".addProd").click(function () {
                addProducts();
            });
            addProducts();
        });
    </script>

}
